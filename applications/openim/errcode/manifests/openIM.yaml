---
# Source: openim/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: openim
  labels:
    helm.sh/chart: openim-3.0.0-alpha1
    app.kubernetes.io/name: openim
    app.kubernetes.io/instance: openim
    app.kubernetes.io/version: "errcode"
    app.kubernetes.io/managed-by: Helm
---
# Source: openim/templates/configmap.yaml
kind: ConfigMap
apiVersion: v1
metadata:
  name: openim
  labels:
    helm.sh/chart: openim-3.0.0-alpha1
    app.kubernetes.io/name: openim
    app.kubernetes.io/instance: openim
    app.kubernetes.io/version: "errcode"
    app.kubernetes.io/managed-by: Helm
data:
  config.yaml: |
    # The class cannot be named by Pascal or camel case.
    # If it is not used, the corresponding structure will not be set,
    # and it will not be read naturally.
    serverversion: 2.3.7
    #---------------Infrastructure configuration---------------------#
    zookeeper:
      schema: openim
      #单机部署时，默认即可
      zkAddr:
      - bitnami-zookeeper.zookeeper.svc.cluster.local:2181
      userName: 
      password: 
    mysql:
      #mysql地址 目前仅支持单机，默认即可
      dbMysqlAddress:
      - bitnami-mysql.mysql.svc.cluster.local:3306
      dbMysqlUserName: root #mysql用户名，建议修改
      dbMysqlPassword: mysql123 # mysql密码，建议修改
      dbMysqlDatabaseName: openIM_v2 #默认即可
      dbTableName: eMsg #默认即可
      dbMsgTableNum: 1
      dbMaxOpenConns: 100
      dbMaxIdleConns: 10
      dbMaxLifeTime: 5
      logLevel: 4 #1=slient 2=error 3=warn 4=info
      slowThreshold: 500

    mongo:
      dbUri: ""#当dbUri值不为空则直接使用该值
      #单机时为mongo地址，使用分片集群时，为mongos地址 默认即可
      dbAddress:
      - mongodb-sharded.mongodb-sharded.svc.cluster.local:27017
      dbDirect: false
      dbTimeout: 60
      dbDatabase: openIM  #mongo db 默认即可
      dbSource: admin
      dbUserName: root #mongo用户名，建议先不设置
      dbPassword:   #mongo密码，建议先不设置
      dbMaxPoolSize: 100
      dbRetainChatRecords: 3650 #mongo保存离线消息时间（天），根据需求修改
      chatRecordsClearTime: "0 2 * * 3" # 每周三凌晨2点清除消息，该配置和linux定时任务一样， 清理操作建议设置在用户活跃少的时候 # 0 3 * * *

    redis:
      dbAddress:
      - redis-cluster-0.redis-cluster-headless.redis-cluster.svc.cluster.local:6379
      - redis-cluster-1.redis-cluster-headless.redis-cluster.svc.cluster.local:6379
      - redis-cluster-2.redis-cluster-headless.redis-cluster.svc.cluster.local:6379
      - redis-cluster-3.redis-cluster-headless.redis-cluster.svc.cluster.local:6379
      - redis-cluster-4.redis-cluster-headless.redis-cluster.svc.cluster.local:6379
      - redis-cluster-5.redis-cluster-headless.redis-cluster.svc.cluster.local:6379
      dbMaxIdle: 128
      dbMaxActive: 0
      dbIdleTimeout: 120
      dbUserName: 
      dbPassWord:  #redis密码 建议修改
      enableCluster: true #如果外部redis以集群方式启动，需要打开此开关

    kafka:
      SASLUserName: 
      SASLPassword: 
      ws2mschat:
        addr:
        - bitnami-kafka-0.bitnami-kafka-headless.kafka.svc.cluster.local:9092
        topic: ws2ms_chat #用于mongo和mysql保存消息
      msgtomongo:
        addr:
          - bitnami-kafka-0.bitnami-kafka-headless.kafka.svc.cluster.local:9092
        topic: msg_to_mongo
      ms2pschat:
        addr:
          - bitnami-kafka-0.bitnami-kafka-headless.kafka.svc.cluster.local:9092
        topic: ms2ps_chat
      msgtomodify:
        addr:
          - bitnami-kafka-0.bitnami-kafka-headless.kafka.svc.cluster.local:9092
        topic: msg_to_modify
      consumergroupid:
        msgToTransfer: mongo
        msgToMongo: mongo_ex
        msgToMySql: mysql
        msgToPush: push
        msgToModify: modify


    #---------------Internal service configuration---------------------#

    # The service ip default is empty,
    # automatically obtain the machine's valid network card ip as the service ip,
    # otherwise the configuration ip is preferred
    #如果是单机模式，用0.0.0.0或者不填，默认即可

    #作为rpc时，注册到etcd的地址，单机默认即可，如果是集群部署，需要修改（具体使用内网地址还是外网地址，要依情况而定，目的是api/gateway能访问到）
    rpcRegisterIP:
    #默认即可
    listenIP: 0.0.0.0


    api:
      openImApiPort: [ 10002 ] #api服务端口，默认即可，需要开放此端口或做nginx转发
      listenIP: 0.0.0.0

    #对象存储服务，以下配置二选一，目前支持两种，腾讯云和minio，二者配置好其中一种即可（如果使用minio参考https://doc.rentsoft.cn/#/qa/minio搭建minio服务器）
    credential: #腾讯cos，发送图片、视频、文件时需要，请自行申请后替换，必须修改


    object:
      enable: minio
      apiURL: http://api-openim.schedule-system.svc.cluster.local:8080/third/object
      minio: #MinIO 发送图片、视频、文件时需要，请自行申请后替换，必须修改。 客户端初始化InitSDK，中 object_storage参数为minio
        tempBucket: openim
        dataBucket: openim
        location: 
        endpoint: http://127.0.0.1:9000
        accessKeyID: admin
        secretAccessKey: minio123
        isDistributedMod: false # 是否分布式多硬盘部署 默认docker-compose中为false，如果是多硬盘部署，需要修改为true
      tencent:
        appID:
        region:
        bucket:
        secretID:
        secretKey:
      ali: # ali oss
        regionID:
        accessKeyID:
        accessKeySecret:
        stsEndpoint:
        ossEndpoint:
        bucket:
        finalHost:
        stsDurationSeconds:
        OssRoleArn:
      aws:
        accessKeyID:                              #AssumeRole用户关联的accessKeyID
        accessKeySecret:                          #AssumeRole用户关联的accessKeySecrect
        region:                                   #分区
        bucket:                                   #桶
        finalHost:                                #对外Host
        roleArn:                                  #RoleArn
        externalId:                               #角色扩展Id
        roleSessionName:                          #角色SESSION名称

    rpcregistername: #rpc注册服务名，默认即可
      openImUserName: User
      openImFriendName: Friend
      openImMsgName: Msg
      openImPushName: Push
      openImMessageGatewayName: MessageGateway
      openImGroupName: Group
      openImAuthName: Auth
      openImConversationName: Conversation
      openImRtcName: Rtc
      openImThirdName: Third

    log:
      storageLocation: ../logs/
      rotationTime: 24
      remainRotationCount: 2 #日志数量
      #日志级别 6表示全都打印，测试阶段建议设置为6
      remainLogLevel: 6
      isStdout: true
      isJson: false
      withStack: false

    modulename: #日志文件按模块命名，默认即可
      longConnSvrName: msg_gateway
      msgTransferName: msg_transfer
      pushName: push

    longconnsvr:
      openImWsPort: [ 10001 ] # ws服务端口，默认即可，要开放此端口或做nginx转发
      websocketMaxConnNum: 10000
      websocketMaxMsgLen: 4096
      websocketTimeOut: 10

    ## 推送只能开启一个 enable代表开启
    push:
      tpns: #腾讯推送，暂未测试 暂不要使用
        ios:
          accessID: 1600018281
          secretKey: 3cd68a77a95b89e5089a1aca523f318f
        android:
          accessID: 111
          secretKey: 111
        enable: false # true or false (bool)
      jpns: #极光推送 在极光后台申请后，修改以下四项，必须修改
        appKey:
        masterSecret:
        pushUrl:
        pushIntent:
        enable: false # true or false (bool)
      getui: #个推推送
        pushUrl: "https://restapi.getui.com/v2/$appId"
        masterSecret: ""
        appKey: ""
        intent: ""
        enable: false # true or false (bool)
        channelID: ""
        channelName: ""
      fcm: #firebase cloud message 消息推送
        serviceAccount: "openim-5c6c0-firebase-adminsdk-ppwol-8765884a78.json" #帐号文件，此处需要改修配置，并且这个文件放在 config目录下
        enable: false

    manager:
      #app管理员userID和对应的secret  建议修改。 用于管理后台登录，也可以用户管理后台对应的api
      appManagerUid: [ "openIM123456","openIM654321", "openIM333", "openIMAdmin" ]
      nickname: [ "系统通知","openIM654321", "openIM333", "openIMAdmin" ]


    secret: tuoyun
    # 多端互踢策略
    # 1：多平台登录：Android、iOS、Windows、Mac 每种平台只能一个在线，web端可以多个同时在线
    multiloginpolicy: 1

    #msg log insert to db
    chatpersistencemysql: true
    #消息缓存时间
    msgCacheTimeout: 86400
    #群聊已读开启
    groupMessageHasReadReceiptEnable: true
    #单聊已读开启
    singleMessageHasReadReceiptEnable: true

    #token config
    tokenpolicy:
      accessSecret: "OpenIM_server" #token生成相关，默认即可
      # Token effective time day as a unit
      accessExpire: 90  #token过期时间（天） 默认即可
    messageverify:
      friendVerify: false

    #ios系统推送声音以及标记计数
    iospush:
      pushSound: "xxx"
      badgeCount: true
      production: false

    callback:
      # callback url 需要自行更换callback url
      callbackUrl: "http://127.0.0.1:10008/callback/open_im"
      # 开启关闭操作前后回调的配置
      callbackBeforeSendSingleMsg:
        enable: false # 回调是否启用
        callbackTimeOut: 2 # 回调超时时间
        callbackFailedContinue: true # 回调超时是否继续执行代码
      callbackAfterSendSingleMsg:
        enable: false
        callbackTimeOut: 2
      callbackBeforeSendGroupMsg:
        enable: false
        callbackTimeOut: 2
        callbackFailedContinue: true
      callbackAfterSendGroupMsg:
        enable: false
        callbackTimeOut: 2
      callbackMsgModify:
        enable: false
        callbackTimeOut: 2
        callbackFailedContinue: true
      callbackUserOnline:
        enable: false
        callbackTimeOut: 2
      callbackUserOffline:
        enable: false
        callbackTimeOut: 2
      callbackUserKickOff:
        enable: false
        callbackTimeOut: 2
      callbackOfflinePush:
        enable: false
        callbackTimeOut: 2
        callbackFailedContinue: true # 回调超时是否继续离线推送
      callbackOnlinePush:
        enable: false
        callbackTimeOut: 2
        callbackFailedContinue: true # 回调超时是否继续离线推送
      callbackSuperGroupOnlinePush:
        enable: false
        callbackTimeOut: 2
        callbackFailedContinue: true # 回调超时是否继续离线推送
      callbackBeforeAddFriend:
        enable: false
        callbackTimeOut: 2
        callbackFailedContinue: true # 回调超时是否继续
      callbackBeforeCreateGroup:
        enable: false
        callbackTimeOut: 2
        callbackFailedContinue: true # 回调超时是否继续
      callbackBeforeMemberJoinGroup:
        enable: false
        callbackTimeOut: 2
        callbackFailedContinue: true # 回调超时是否继续
      callbackBeforeSetGroupMemberInfo:
        enable: false
        callbackTimeOut: 2
        callbackFailedContinue: true # 回调超时是否继续
      callbackSetMessageReactionExtensions:
        enable: false
        callbackTimeOut: 2
        callbackFailedContinue: true # 回调超时是否继续

    rtc:
      signalTimeout: 35

    # prometheus每个服务监听的端口数量需要和rpc port保持一致
    prometheus:
      enable: true

  notification.yaml: |
    groupCreated:
      isSendMsg: true #是否发送消息，false不发消息为无声的触发同步。true发消息需要触发会话，rpc notification直接发两次，一次消息一次通知, options字段isNotification是否为通知
      reliabilityLevel: 1 # 1为online才发送 2为必达
      unreadCount: false # 只在isSendMsg为true的情况下有作用
      offlinePush:
        enable: false # 开启该开关
        title: "create group title" # xx create the group
        desc: "create group desc"
        ext: "create group ext"

    # 不加消息contentType，content统一json 结构体使用pb的


    groupInfoSet:
      isSendMsg: false
      reliabilityLevel: 1
      unreadCount: false
      offlinePush:
        enable: false
        title: "groupInfoSet title"
        desc: "groupInfoSet desc"
        ext: "groupInfoSet ext"


    joinGroupApplication:
      isSendMsg: false
      reliabilityLevel: 1
      unreadCount: false
      offlinePush:
        enable: false
        title: "joinGroupApplication title"
        desc: "joinGroupApplication desc"
        ext: "joinGroupApplication ext"

    memberQuit:
      isSendMsg: true
      reliabilityLevel: 1
      unreadCount: false
      offlinePush:
        enable: false
        title: "memberQuit title"
        desc: "memberQuit desc"
        ext: "memberQuit ext"

    groupApplicationAccepted:
      isSendMsg: false
      reliabilityLevel: 1
      unreadCount: false
      offlinePush:
        enable: false
        title: "groupApplicationAccepted title"
        desc: "groupApplicationAccepted desc"
        ext: "groupApplicationAccepted ext"

    groupApplicationRejected:
      isSendMsg: false
      reliabilityLevel: 1
      unreadCount: false
      offlinePush:
        enable: false
        title: " title"
        desc: " desc"
        ext: " ext"


    groupOwnerTransferred:
      isSendMsg: true
      reliabilityLevel: 1
      unreadCount: false
      offlinePush:
        enable: false
        title: "groupOwnerTransferred title"
        desc: "groupOwnerTransferred desc"
        ext: "groupOwnerTransferred ext"

    memberKicked:
      isSendMsg: true
      reliabilityLevel: 1
      unreadCount: false
      offlinePush:
        enable: false
        title: "memberKicked title"
        desc: "memberKicked desc"
        ext: "memberKicked ext"

    memberInvited:
      isSendMsg: true
      reliabilityLevel: 1
      unreadCount: false
      offlinePush:
        enable: false
        title: "memberInvited title"
        desc: "memberInvited desc"
        ext: "memberInvited ext"

    memberEnter:
      isSendMsg: true
      reliabilityLevel: 1
      unreadCount: false
      offlinePush:
        enable: false
        title: "memberEnter title"
        desc: "memberEnter desc"
        ext: "memberEnter ext"

    groupDismissed:
      isSendMsg: true
      reliabilityLevel: 1
      unreadCount: false
      offlinePush:
        enable: false
        title: "groupDismissed title"
        desc: "groupDismissed desc"
        ext: "groupDismissed ext"

    groupMuted:
      isSendMsg: true
      reliabilityLevel: 1
      unreadCount: false
      offlinePush:
        enable: false
        title: "groupMuted title"
        desc: "groupMuted desc"
        ext: "groupMuted ext"

    groupCancelMuted:
      isSendMsg: true
      reliabilityLevel: 1
      unreadCount: false
      offlinePush:
        enable: false
        title: "groupCancelMuted title"
        desc: "groupCancelMuted desc"
        ext: "groupCancelMuted ext"
      defaultTips:
        tips: "group Cancel Muted"


    groupMemberMuted:
      isSendMsg: true
      reliabilityLevel: 1
      unreadCount: false
      offlinePush:
        enable: false
        title: "groupMemberMuted title"
        desc: "groupMemberMuted desc"
        ext: "groupMemberMuted ext"

    groupMemberCancelMuted:
      isSendMsg: true
      reliabilityLevel: 1
      unreadCount: false
      offlinePush:
        enable: false
        title: "groupMemberCancelMuted title"
        desc: "groupMemberCancelMuted desc"
        ext: "groupMemberCancelMuted ext"

    groupMemberInfoSet:
      isSendMsg: false
      reliabilityLevel: 1
      unreadCount: false
      offlinePush:
        enable: false
        title: "groupMemberInfoSet title"
        desc: "groupMemberInfoSet desc"
        ext: "groupMemberInfoSet ext"

    groupInfoSetAnnouncement:
      isSendMsg: true
      reliabilityLevel: 1
      unreadCount: false
      offlinePush:
        enable: false
        title: "groupInfoSetAnnouncement title"
        desc: "groupInfoSetAnnouncement desc"
        ext: "groupInfoSetAnnouncement ext"


    groupInfoSetName:
      isSendMsg: true
      reliabilityLevel: 1
      unreadCount: false
      offlinePush:
        enable: false
        title: "groupInfoSetName title"
        desc: "groupInfoSetName desc"
        ext: "groupInfoSetName ext"


    #############################friend#################################
    friendApplicationAdded:
      isSendMsg: false
      reliabilityLevel: 1
      unreadCount: false
      offlinePush:
        enable: false
        title: "Somebody applies to add you as a friend"
        desc: "Somebody applies to add you as a friend"
        ext: "Somebody applies to add you as a friend"

    friendApplicationApproved:
      isSendMsg: true
      reliabilityLevel: 1
      unreadCount: false
      offlinePush:
        enable: true
        title: "Someone applies to add your friend application"
        desc: "Someone applies to add your friend application"
        ext: "Someone applies to add your friend application"

    friendApplicationRejected:
      isSendMsg: false
      reliabilityLevel: 1
      unreadCount: false
      offlinePush:
        enable: true
        title: "Someone rejected your friend application"
        desc: "Someone rejected your friend application"
        ext: "Someone rejected your friend application"

    friendAdded:
      isSendMsg: false
      reliabilityLevel: 1
      unreadCount: false
      offlinePush:
        enable: true
        title: "We have become friends"
        desc: "We have become friends"
        ext: "We have become friends"

    friendDeleted:
      isSendMsg: false
      reliabilityLevel: 1
      unreadCount: false
      offlinePush:
        enable: true
        title: "deleted a friend"
        desc: "deleted a friend"
        ext: "deleted a friend"

    friendRemarkSet:
      isSendMsg: false
      reliabilityLevel: 1
      unreadCount: false
      offlinePush:
        enable: true
        title: "Your friend's profile has been changed"
        desc: "Your friend's profile has been changed"
        ext: "Your friend's profile has been changed"

    blackAdded:
      isSendMsg: false
      reliabilityLevel: 1
      unreadCount: false
      offlinePush:
        enable: true
        title: "blocked a user"
        desc: "blocked a user"
        ext: "blocked a user"

    blackDeleted:
      isSendMsg: false
      reliabilityLevel: 1
      unreadCount: false
      offlinePush:
        enable: true
        title: "Remove a blocked user"
        desc: "Remove a blocked user"
        ext: "Remove a blocked user"

    friendInfoUpdated:
      isSendMsg: false
      reliabilityLevel: 1
      unreadCount: false
      offlinePush:
        enable: true
        title: "friend info updated"
        desc: "friend info updated"
        ext: "friend info updated"

    #####################user#########################
    userInfoUpdated:
      isSendMsg: false
      reliabilityLevel: 1
      unreadCount: false
      offlinePush:
        enable: true
        title: "Remove a blocked user"
        desc: "Remove a blocked user"
        ext: "Remove a blocked user"

    #####################conversation#########################
    conversationChanged:
      isSendMsg: false
      reliabilityLevel: 1
      unreadCount: false
      offlinePush:
        enable: true
        title: "conversation changed"
        desc: "conversation changed"
        ext: "conversation changed"

    conversationSetPrivate:
      isSendMsg: true
      reliabilityLevel: 1
      unreadCount: false
      offlinePush:
        enable: true
        title: "burn after reading"
        desc: "burn after reading"
        ext: "burn after reading"
---
# Source: openim/templates/api-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: api-openim
  labels:
    helm.sh/chart: openim-3.0.0-alpha1
    app.kubernetes.io/name: openim
    app.kubernetes.io/instance: openim
    app.kubernetes.io/version: "errcode"
    app.kubernetes.io/managed-by: Helm
    app: api
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: openim
    app.kubernetes.io/instance: openim
    app: api
---
# Source: openim/templates/msg_gateway-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: msg-gateway-openim
  labels:
    helm.sh/chart: openim-3.0.0-alpha1
    app.kubernetes.io/name: openim
    app.kubernetes.io/instance: openim
    app.kubernetes.io/version: "errcode"
    app.kubernetes.io/managed-by: Helm
    app: msg-gateway
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: rpc
      protocol: TCP
      name: rpc
    - port: 9090
      targetPort: metrics
      protocol: TCP
      name: metrics
    - port: 8081
      targetPort: ws
      protocol: TCP
      name: ws
  selector:
    app.kubernetes.io/name: openim
    app.kubernetes.io/instance: openim
    app: msg-gateway
---
# Source: openim/templates/msg_transfer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: msg-transfer-openim
  labels:
    helm.sh/chart: openim-3.0.0-alpha1
    app.kubernetes.io/name: openim
    app.kubernetes.io/instance: openim
    app.kubernetes.io/version: "errcode"
    app.kubernetes.io/managed-by: Helm
    app: msg-transfer
spec:
  type: ClusterIP
  ports:
    - port: 9090
      targetPort: metrics
      protocol: TCP
      name: metrics
  selector:
    app.kubernetes.io/name: openim
    app.kubernetes.io/instance: openim
    app: msg-transfer
---
# Source: openim/templates/push-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: push-openim
  labels:
    helm.sh/chart: openim-3.0.0-alpha1
    app.kubernetes.io/name: openim
    app.kubernetes.io/instance: openim
    app.kubernetes.io/version: "errcode"
    app.kubernetes.io/managed-by: Helm
    app: push
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: rpc
      protocol: TCP
      name: rpc
    - port: 9090
      targetPort: metrics
      protocol: TCP
      name: metrics
  selector:
    app.kubernetes.io/name: openim
    app.kubernetes.io/instance: openim
    app: push
---
# Source: openim/templates/rpc_auth-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: rpc-auth-openim
  labels:
    helm.sh/chart: openim-3.0.0-alpha1
    app.kubernetes.io/name: openim
    app.kubernetes.io/instance: openim
    app.kubernetes.io/version: "errcode"
    app.kubernetes.io/managed-by: Helm
    app: rpc-auth
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: rpc
      protocol: TCP
      name: rpc
  selector:
    app.kubernetes.io/name: openim
    app.kubernetes.io/instance: openim
    app: rpc-auth
---
# Source: openim/templates/rpc_conversation-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: rpc-conversation-openim
  labels:
    helm.sh/chart: openim-3.0.0-alpha1
    app.kubernetes.io/name: openim
    app.kubernetes.io/instance: openim
    app.kubernetes.io/version: "errcode"
    app.kubernetes.io/managed-by: Helm
    app: rpc-conversation
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: rpc
      protocol: TCP
      name: rpc
    - port: 9090
      targetPort: metrics
      protocol: TCP
      name: metrics
  selector:
    app.kubernetes.io/name: openim
    app.kubernetes.io/instance: openim
    app: rpc-conversation
---
# Source: openim/templates/rpc_friend-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: rpc-friend-openim
  labels:
    helm.sh/chart: openim-3.0.0-alpha1
    app.kubernetes.io/name: openim
    app.kubernetes.io/instance: openim
    app.kubernetes.io/version: "errcode"
    app.kubernetes.io/managed-by: Helm
    app: rpc-friend
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: rpc
      protocol: TCP
      name: rpc
    - port: 9090
      targetPort: metrics
      protocol: TCP
      name: metrics
  selector:
    app.kubernetes.io/name: openim
    app.kubernetes.io/instance: openim
    app: rpc-friend
---
# Source: openim/templates/rpc_group-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: rpc-group-openim
  labels:
    helm.sh/chart: openim-3.0.0-alpha1
    app.kubernetes.io/name: openim
    app.kubernetes.io/instance: openim
    app.kubernetes.io/version: "errcode"
    app.kubernetes.io/managed-by: Helm
    app: rpc-group
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: rpc
      protocol: TCP
      name: rpc
    - port: 9090
      targetPort: metrics
      protocol: TCP
      name: metrics
  selector:
    app.kubernetes.io/name: openim
    app.kubernetes.io/instance: openim
    app: rpc-group
---
# Source: openim/templates/rpc_msg-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: rpc-msg-openim
  labels:
    helm.sh/chart: openim-3.0.0-alpha1
    app.kubernetes.io/name: openim
    app.kubernetes.io/instance: openim
    app.kubernetes.io/version: "errcode"
    app.kubernetes.io/managed-by: Helm
    app: rpc-msg
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: rpc
      protocol: TCP
      name: rpc
    - port: 9090
      targetPort: metrics
      protocol: TCP
      name: metrics
  selector:
    app.kubernetes.io/name: openim
    app.kubernetes.io/instance: openim
    app: rpc-msg
---
# Source: openim/templates/rpc_third-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: rpc-third-openim
  labels:
    helm.sh/chart: openim-3.0.0-alpha1
    app.kubernetes.io/name: openim
    app.kubernetes.io/instance: openim
    app.kubernetes.io/version: "errcode"
    app.kubernetes.io/managed-by: Helm
    app: rpc-third
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: rpc
      protocol: TCP
      name: rpc
    - port: 9090
      targetPort: metrics
      protocol: TCP
      name: metrics
  selector:
    app.kubernetes.io/name: openim
    app.kubernetes.io/instance: openim
    app: rpc-third
---
# Source: openim/templates/rpc_user-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: rpc-user-openim
  labels:
    helm.sh/chart: openim-3.0.0-alpha1
    app.kubernetes.io/name: openim
    app.kubernetes.io/instance: openim
    app.kubernetes.io/version: "errcode"
    app.kubernetes.io/managed-by: Helm
    app: rpc-user
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: rpc
      protocol: TCP
      name: rpc
  selector:
    app.kubernetes.io/name: openim
    app.kubernetes.io/instance: openim
    app: rpc-user
---
# Source: openim/templates/api-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-openim
  labels:
    helm.sh/chart: openim-3.0.0-alpha1
    app.kubernetes.io/name: openim
    app.kubernetes.io/instance: openim
    app.kubernetes.io/version: "errcode"
    app.kubernetes.io/managed-by: Helm
    app: api
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: openim
      app.kubernetes.io/instance: openim
      app: api
  template:
    metadata:
      annotations:
        checksum/configmap: 409d289719fe60df03cdb06d05efb57de2109d9155ae644b145b6c6b279766f7
      labels:
        app.kubernetes.io/name: openim
        app.kubernetes.io/instance: openim
        app: api
    spec:
      serviceAccountName: openim
      securityContext:
        {}
      containers:
        - name: openim
          securityContext:
            {}
          image: "openim/api:errcode"
          imagePullPolicy: IfNotPresent
          command: [ "./open_im_api" ]
          args: [ "--port", "10002" ]
          ports:
            - name: http
              containerPort: 10002
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: http
          readinessProbe:
            tcpSocket:
              port: http
          volumeMounts:
            - name: config
              mountPath: /Open-IM-Server/config/config.yaml
              subPath: config.yaml
              readOnly: true
            - name: notification
              mountPath: /Open-IM-Server/config/notification.yaml
              subPath: notification.yaml
              readOnly: true
          env:
            - name: CONFIG_NAME
              value: "/Open-IM-Server"
          resources:
            limits:
              cpu: 600m
              memory: 1024Mi
            requests:
              cpu: 10m
              memory: 100Mi
      volumes:
        - name: config
          configMap:
            name: openim
            items:
              - key: config.yaml
                path: config.yaml
        - name: notification
          configMap:
            name: openim
            items:
              - key: notification.yaml
                path: notification.yaml
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - api
              topologyKey: kubernetes.io/hostname
            weight: 100
---
# Source: openim/templates/cron_task-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cron-task-openim
  labels:
    helm.sh/chart: openim-3.0.0-alpha1
    app.kubernetes.io/name: openim
    app.kubernetes.io/instance: openim
    app.kubernetes.io/version: "errcode"
    app.kubernetes.io/managed-by: Helm
    app: cron-task
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: openim
      app.kubernetes.io/instance: openim
      app: cron-task
  template:
    metadata:
      annotations:
        checksum/configmap: 409d289719fe60df03cdb06d05efb57de2109d9155ae644b145b6c6b279766f7
      labels:
        app.kubernetes.io/name: openim
        app.kubernetes.io/instance: openim
        app: cron-task
    spec:
      serviceAccountName: openim
      securityContext:
        {}
      containers:
        - name: openim
          command: [ "./open_im_cron_task" ]
          securityContext:
            {}
          image: "openim/cron_task:errcode"
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: config
              mountPath: /Open-IM-Server/config/config.yaml
              subPath: config.yaml
              readOnly: true
            - name: notification
              mountPath: /Open-IM-Server/config/notification.yaml
              subPath: notification.yaml
              readOnly: true
          env:
            - name: CONFIG_NAME
              value: "/Open-IM-Server"
            - name: USUAL_CONFIG_NAME
              value: "/Open-IM-Server"
          resources:
            limits:
              cpu: 300m
              memory: 512Mi
            requests:
              cpu: 10m
              memory: 100Mi
      volumes:
        - name: config
          configMap:
            name: openim
            items:
              - key: config.yaml
                path: config.yaml
        - name: notification
          configMap:
            name: openim
            items:
              - key: notification.yaml
                path: notification.yaml
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - cron_task
              topologyKey: kubernetes.io/hostname
            weight: 100
---
# Source: openim/templates/msg_gateway-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: msg-gateway-openim
  labels:
    helm.sh/chart: openim-3.0.0-alpha1
    app.kubernetes.io/name: openim
    app.kubernetes.io/instance: openim
    app.kubernetes.io/version: "errcode"
    app.kubernetes.io/managed-by: Helm
    app: msg-gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: openim
      app.kubernetes.io/instance: openim
      app: msg-gateway
  template:
    metadata:
      annotations:
        checksum/configmap: 409d289719fe60df03cdb06d05efb57de2109d9155ae644b145b6c6b279766f7
      labels:
        app.kubernetes.io/name: openim
        app.kubernetes.io/instance: openim
        app: msg-gateway
    spec:
      serviceAccountName: openim
      securityContext:
        {}
      containers:
        - name: openim
          securityContext:
            {}
          image: "openim/msg_gateway:errcode"
          imagePullPolicy: IfNotPresent
          command: [ "./open_im_msg_gateway" ]
          args: ["--port", "10140", "--ws_port", "10001", "--prometheus_port", "20240"]
          ports:
            - name: rpc
              containerPort: 10140
              protocol: TCP
            - name: ws
              containerPort: 10001
              protocol: TCP
            - name: metrics
              containerPort: 20240
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: rpc
          readinessProbe:
            tcpSocket:
              port: rpc
          volumeMounts:
            - name: config
              mountPath: /Open-IM-Server/config/config.yaml
              subPath: config.yaml
              readOnly: true
            - name: notification
              mountPath: /Open-IM-Server/config/notification.yaml
              subPath: notification.yaml
              readOnly: true
          env:
            - name: CONFIG_NAME
              value: "/Open-IM-Server"
            - name: USUAL_CONFIG_NAME
              value: "/Open-IM-Server"
          resources:
            limits:
              cpu: 600m
              memory: 1024Mi
            requests:
              cpu: 10m
              memory: 100Mi
      volumes:
        - name: config
          configMap:
            name: openim
            items:
              - key: config.yaml
                path: config.yaml
        - name: notification
          configMap:
            name: openim
            items:
              - key: notification.yaml
                path: notification.yaml
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - msg-gateway
              topologyKey: kubernetes.io/hostname
            weight: 100
---
# Source: openim/templates/msg_transfer-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: msg-transfer-openim
  labels:
    helm.sh/chart: openim-3.0.0-alpha1
    app.kubernetes.io/name: openim
    app.kubernetes.io/instance: openim
    app.kubernetes.io/version: "errcode"
    app.kubernetes.io/managed-by: Helm
    app: msg-transfer
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: openim
      app.kubernetes.io/instance: openim
      app: msg-transfer
  template:
    metadata:
      annotations:
        checksum/configmap: 409d289719fe60df03cdb06d05efb57de2109d9155ae644b145b6c6b279766f7
      labels:
        app.kubernetes.io/name: openim
        app.kubernetes.io/instance: openim
        app: msg-transfer
    spec:
      serviceAccountName: openim
      securityContext:
        {}
      containers:
        - name: openim
          securityContext:
            {}
          image: "openim/msg_transfer:errcode"
          imagePullPolicy: IfNotPresent
          command: [ "./open_im_msg_transfer" ]
          args: ["--prometheus_port", "21400"]
          ports:
            - name: metrics
              containerPort: 21400
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: metrics #TODO 这里需要调整
          readinessProbe:
            tcpSocket:
              port: metrics #TODO 这里需要调整
          volumeMounts:
            - name: config
              mountPath: /Open-IM-Server/config/config.yaml
              subPath: config.yaml
              readOnly: true
            - name: notification
              mountPath: /Open-IM-Server/config/notification.yaml
              subPath: notification.yaml
              readOnly: true
          env:
            - name: CONFIG_NAME
              value: "/Open-IM-Server"
            - name: USUAL_CONFIG_NAME
              value: "/Open-IM-Server"
          resources:
            limits:
              cpu: 600m
              memory: 1024Mi
            requests:
              cpu: 10m
              memory: 100Mi
      volumes:
        - name: config
          configMap:
            name: openim
            items:
              - key: config.yaml
                path: config.yaml
        - name: notification
          configMap:
            name: openim
            items:
              - key: notification.yaml
                path: notification.yaml
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - msg-transfer
              topologyKey: kubernetes.io/hostname
            weight: 100
---
# Source: openim/templates/push-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: push-openim
  labels:
    helm.sh/chart: openim-3.0.0-alpha1
    app.kubernetes.io/name: openim
    app.kubernetes.io/instance: openim
    app.kubernetes.io/version: "errcode"
    app.kubernetes.io/managed-by: Helm
    app: push
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: openim
      app.kubernetes.io/instance: openim
      app: push
  template:
    metadata:
      annotations:
        checksum/configmap: 409d289719fe60df03cdb06d05efb57de2109d9155ae644b145b6c6b279766f7
      labels:
        app.kubernetes.io/name: openim
        app.kubernetes.io/instance: openim
        app: push
    spec:
      serviceAccountName: openim
      securityContext:
        {}
      containers:
        - name: openim
          securityContext:
            {}
          image: "openim/push:errcode"
          imagePullPolicy: IfNotPresent
          command: [ "./open_im_push" ]
          args: [ "--port", "10170", "--prometheus_port", "20170" ]
          ports:
            - name: rpc
              containerPort: 10170
              protocol: TCP
            - name: metrics
              containerPort: 20170
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: rpc
          readinessProbe:
            tcpSocket:
              port: rpc
          volumeMounts:
            - name: config
              mountPath: /Open-IM-Server/config/config.yaml
              subPath: config.yaml
              readOnly: true
            - name: notification
              mountPath: /Open-IM-Server/config/notification.yaml
              subPath: notification.yaml
              readOnly: true
          env:
            - name: CONFIG_NAME
              value: "/Open-IM-Server"
            - name: USUAL_CONFIG_NAME
              value: "/Open-IM-Server"
          resources:
            limits:
              cpu: 600m
              memory: 1024Mi
            requests:
              cpu: 10m
              memory: 100Mi
      volumes:
        - name: config
          configMap:
            name: openim
            items:
              - key: config.yaml
                path: config.yaml
        - name: notification
          configMap:
            name: openim
            items:
              - key: notification.yaml
                path: notification.yaml
---
# Source: openim/templates/rpc_auth-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rpc-auth-openim
  labels:
    helm.sh/chart: openim-3.0.0-alpha1
    app.kubernetes.io/name: openim
    app.kubernetes.io/instance: openim
    app.kubernetes.io/version: "errcode"
    app.kubernetes.io/managed-by: Helm
    app: rpc-auth
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: openim
      app.kubernetes.io/instance: openim
      app: rpc-auth
  template:
    metadata:
      annotations:
        checksum/configmap: 409d289719fe60df03cdb06d05efb57de2109d9155ae644b145b6c6b279766f7
      labels:
        app.kubernetes.io/name: openim
        app.kubernetes.io/instance: openim
        app: rpc-auth
    spec:
      serviceAccountName: openim
      securityContext:
        {}
      containers:
        - name: openim
          securityContext:
            {}
          image: "openim/auth:errcode"
          imagePullPolicy: IfNotPresent
          command: [ "./open_im_auth" ]
          args: [ "--port", "10160" ]
          ports:
            - name: rpc
              containerPort: 10160
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: rpc
          readinessProbe:
            tcpSocket:
              port: rpc
          volumeMounts:
            - name: config
              mountPath: /Open-IM-Server/config/config.yaml
              subPath: config.yaml
              readOnly: true
            - name: notification
              mountPath: /Open-IM-Server/config/notification.yaml
              subPath: notification.yaml
              readOnly: true
          env:
            - name: CONFIG_NAME
              value: "/Open-IM-Server"
            - name: USUAL_CONFIG_NAME
              value: "/Open-IM-Server"
          resources:
            limits:
              cpu: 300m
              memory: 512Mi
            requests:
              cpu: 10m
              memory: 100Mi
      volumes:
        - name: config
          configMap:
            name: openim
            items:
              - key: config.yaml
                path: config.yaml
        - name: notification
          configMap:
            name: openim
            items:
              - key: notification.yaml
                path: notification.yaml
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - auth
              topologyKey: kubernetes.io/hostname
            weight: 100
---
# Source: openim/templates/rpc_conversation-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rpc-conversation-openim
  labels:
    helm.sh/chart: openim-3.0.0-alpha1
    app.kubernetes.io/name: openim
    app.kubernetes.io/instance: openim
    app.kubernetes.io/version: "errcode"
    app.kubernetes.io/managed-by: Helm
    app: rpc-conversation
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: openim
      app.kubernetes.io/instance: openim
      app: rpc-conversation
  template:
    metadata:
      annotations:
        checksum/configmap: 409d289719fe60df03cdb06d05efb57de2109d9155ae644b145b6c6b279766f7
      labels:
        app.kubernetes.io/name: openim
        app.kubernetes.io/instance: openim
        app: rpc-conversation
    spec:
      serviceAccountName: openim
      securityContext:
        {}
      containers:
        - name: openim
          securityContext:
            {}
          image: "openim/conversation:errcode"
          imagePullPolicy: IfNotPresent
          command: [ "./open_im_conversation" ]
          args: [ "--port", "10230", "--prometheus_port","20230" ]
          ports:
            - name: rpc
              containerPort: 10230
              protocol: TCP
            - name: metrics
              containerPort: 20230
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: rpc
          readinessProbe:
            tcpSocket:
              port: rpc
          volumeMounts:
            - name: config
              mountPath: /Open-IM-Server/config/config.yaml
              subPath: config.yaml
              readOnly: true
            - name: notification
              mountPath: /Open-IM-Server/config/notification.yaml
              subPath: notification.yaml
              readOnly: true
          env:
            - name: CONFIG_NAME
              value: "/Open-IM-Server"
            - name: USUAL_CONFIG_NAME
              value: "/Open-IM-Server"
          resources:
            limits:
              cpu: 300m
              memory: 512Mi
            requests:
              cpu: 10m
              memory: 100Mi
      volumes:
        - name: config
          configMap:
            name: openim
            items:
              - key: config.yaml
                path: config.yaml
        - name: notification
          configMap:
            name: openim
            items:
              - key: notification.yaml
                path: notification.yaml
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - conversation
              topologyKey: kubernetes.io/hostname
            weight: 100
---
# Source: openim/templates/rpc_friend-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rpc-friend-openim
  labels:
    helm.sh/chart: openim-3.0.0-alpha1
    app.kubernetes.io/name: openim
    app.kubernetes.io/instance: openim
    app.kubernetes.io/version: "errcode"
    app.kubernetes.io/managed-by: Helm
    app: rpc-friend
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: openim
      app.kubernetes.io/instance: openim
      app: rpc-friend
  template:
    metadata:
      annotations:
        checksum/configmap: 409d289719fe60df03cdb06d05efb57de2109d9155ae644b145b6c6b279766f7
      labels:
        app.kubernetes.io/name: openim
        app.kubernetes.io/instance: openim
        app: rpc-friend
    spec:
      serviceAccountName: openim
      securityContext:
        {}
      containers:
        - name: openim
          securityContext:
            {}
          image: "openim/friend:errcode"
          imagePullPolicy: IfNotPresent
          command: [ "./open_im_friend" ]
          args: [ "--port", "10120", "--prometheus_port","20120" ]
          ports:
            - name: rpc
              containerPort: 10120
              protocol: TCP
            - name: metrics
              containerPort: 20120
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: rpc
          readinessProbe:
            tcpSocket:
              port: rpc
          volumeMounts:
            - name: config
              mountPath: /Open-IM-Server/config/config.yaml
              subPath: config.yaml
              readOnly: true
            - name: notification
              mountPath: /Open-IM-Server/config/notification.yaml
              subPath: notification.yaml
              readOnly: true
          env:
            - name: CONFIG_NAME
              value: "/Open-IM-Server"
            - name: USUAL_CONFIG_NAME
              value: "/Open-IM-Server"
          resources:
            limits:
              cpu: 300m
              memory: 512Mi
            requests:
              cpu: 10m
              memory: 100Mi
      volumes:
        - name: config
          configMap:
            name: openim
            items:
              - key: config.yaml
                path: config.yaml
        - name: notification
          configMap:
            name: openim
            items:
              - key: notification.yaml
                path: notification.yaml
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - friend
              topologyKey: kubernetes.io/hostname
            weight: 100
---
# Source: openim/templates/rpc_group-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rpc-group-openim
  labels:
    helm.sh/chart: openim-3.0.0-alpha1
    app.kubernetes.io/name: openim
    app.kubernetes.io/instance: openim
    app.kubernetes.io/version: "errcode"
    app.kubernetes.io/managed-by: Helm
    app: rpc-group
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: openim
      app.kubernetes.io/instance: openim
      app: rpc-group
  template:
    metadata:
      annotations:
        checksum/configmap: 409d289719fe60df03cdb06d05efb57de2109d9155ae644b145b6c6b279766f7
      labels:
        app.kubernetes.io/name: openim
        app.kubernetes.io/instance: openim
        app: rpc-group
    spec:
      serviceAccountName: openim
      securityContext:
        {}
      containers:
        - name: openim
          securityContext:
            {}
          image: "openim/group:errcode"
          imagePullPolicy: IfNotPresent
          command: [ "./open_im_group" ]
          args: [ "--port", "10150", "--prometheus_port","20150" ]
          ports:
            - name: rpc
              containerPort: 10150
              protocol: TCP
            - name: metrics
              containerPort: 20150
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: rpc
          readinessProbe:
            tcpSocket:
              port: rpc
          volumeMounts:
            - name: config
              mountPath: /Open-IM-Server/config/config.yaml
              subPath: config.yaml
              readOnly: true
            - name: notification
              mountPath: /Open-IM-Server/config/notification.yaml
              subPath: notification.yaml
              readOnly: true
          env:
            - name: CONFIG_NAME
              value: "/Open-IM-Server"
            - name: USUAL_CONFIG_NAME
              value: "/Open-IM-Server"
          resources:
            limits:
              cpu: 300m
              memory: 512Mi
            requests:
              cpu: 10m
              memory: 100Mi
      volumes:
        - name: config
          configMap:
            name: openim
            items:
              - key: config.yaml
                path: config.yaml
        - name: notification
          configMap:
            name: openim
            items:
              - key: notification.yaml
                path: notification.yaml
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - group
              topologyKey: kubernetes.io/hostname
            weight: 100
---
# Source: openim/templates/rpc_msg-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rpc-msg-openim
  labels:
    helm.sh/chart: openim-3.0.0-alpha1
    app.kubernetes.io/name: openim
    app.kubernetes.io/instance: openim
    app.kubernetes.io/version: "errcode"
    app.kubernetes.io/managed-by: Helm
    app: rpc-msg
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: openim
      app.kubernetes.io/instance: openim
      app: rpc-msg
  template:
    metadata:
      annotations:
        checksum/configmap: 409d289719fe60df03cdb06d05efb57de2109d9155ae644b145b6c6b279766f7
      labels:
        app.kubernetes.io/name: openim
        app.kubernetes.io/instance: openim
        app: rpc-msg
    spec:
      serviceAccountName: openim
      securityContext:
        {}
      containers:
        - name: openim
          securityContext:
            {}
          image: "openim/msg:errcode"
          imagePullPolicy: IfNotPresent
          command: [ "./open_im_msg" ]
          args: [ "--port", "10130", "--prometheus_port","20130" ]
          ports:
            - name: rpc
              containerPort: 10130
              protocol: TCP
            - name: metrics
              containerPort: 20130
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: rpc
          readinessProbe:
            tcpSocket:
              port: rpc
          volumeMounts:
            - name: config
              mountPath: /Open-IM-Server/config/config.yaml
              subPath: config.yaml
              readOnly: true
            - name: notification
              mountPath: /Open-IM-Server/config/notification.yaml
              subPath: notification.yaml
              readOnly: true
          env:
            - name: CONFIG_NAME
              value: "/Open-IM-Server"
            - name: USUAL_CONFIG_NAME
              value: "/Open-IM-Server"
          resources:
            limits:
              cpu: 600m
              memory: 1024Mi
            requests:
              cpu: 10m
              memory: 100Mi
      volumes:
        - name: config
          configMap:
            name: openim
            items:
              - key: config.yaml
                path: config.yaml
        - name: notification
          configMap:
            name: openim
            items:
              - key: notification.yaml
                path: notification.yaml
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - msg
              topologyKey: kubernetes.io/hostname
            weight: 100
---
# Source: openim/templates/rpc_third-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rpc-third-openim
  labels:
    helm.sh/chart: openim-3.0.0-alpha1
    app.kubernetes.io/name: openim
    app.kubernetes.io/instance: openim
    app.kubernetes.io/version: "errcode"
    app.kubernetes.io/managed-by: Helm
    app: rpc-third
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: openim
      app.kubernetes.io/instance: openim
      app: rpc-third
  template:
    metadata:
      annotations:
        checksum/configmap: 409d289719fe60df03cdb06d05efb57de2109d9155ae644b145b6c6b279766f7
      labels:
        app.kubernetes.io/name: openim
        app.kubernetes.io/instance: openim
        app: rpc-third
    spec:
      serviceAccountName: openim
      securityContext:
        {}
      containers:
        - name: openim
          securityContext:
            {}
          image: "openim/third:errcode"
          imagePullPolicy: IfNotPresent
          command: [ "./open_im_third" ]
          args: [ "--port", "10200", "--prometheus_port","20200" ]
          ports:
            - name: rpc
              containerPort: 10200
              protocol: TCP
            - name: metrics
              containerPort: 20200
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: rpc
          readinessProbe:
            tcpSocket:
              port: rpc
          volumeMounts:
            - name: config
              mountPath: /Open-IM-Server/config/config.yaml
              subPath: config.yaml
              readOnly: true
            - name: notification
              mountPath: /Open-IM-Server/config/notification.yaml
              subPath: notification.yaml
              readOnly: true
          env:
            - name: CONFIG_NAME
              value: "/Open-IM-Server"
            - name: USUAL_CONFIG_NAME
              value: "/Open-IM-Server"
          resources:
            limits:
              cpu: 600m
              memory: 1024Mi
            requests:
              cpu: 10m
              memory: 100Mi
      volumes:
        - name: config
          configMap:
            name: openim
            items:
              - key: config.yaml
                path: config.yaml
        - name: notification
          configMap:
            name: openim
            items:
              - key: notification.yaml
                path: notification.yaml
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - third
              topologyKey: kubernetes.io/hostname
            weight: 100
---
# Source: openim/templates/rpc_user-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rpc-user-openim
  labels:
    helm.sh/chart: openim-3.0.0-alpha1
    app.kubernetes.io/name: openim
    app.kubernetes.io/instance: openim
    app.kubernetes.io/version: "errcode"
    app.kubernetes.io/managed-by: Helm
    app: rpc-user
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: openim
      app.kubernetes.io/instance: openim
      app: rpc-user
  template:
    metadata:
      annotations:
        checksum/configmap: 409d289719fe60df03cdb06d05efb57de2109d9155ae644b145b6c6b279766f7
      labels:
        app.kubernetes.io/name: openim
        app.kubernetes.io/instance: openim
        app: rpc-user
    spec:
      serviceAccountName: openim
      securityContext:
        {}
      containers:
        - name: openim
          securityContext:
            {}
          image: "openim/user:errcode"
          imagePullPolicy: IfNotPresent
          command: [ "./open_im_user" ]
          args: [ "--port", "10110" ]
          ports:
            - name: rpc
              containerPort: 10110
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: rpc
          readinessProbe:
            tcpSocket:
              port: rpc
          volumeMounts:
            - name: config
              mountPath: /Open-IM-Server/config/config.yaml
              subPath: config.yaml
              readOnly: true
            - name: notification
              mountPath: /Open-IM-Server/config/notification.yaml
              subPath: notification.yaml
              readOnly: true
          env:
            - name: CONFIG_NAME
              value: "/Open-IM-Server"
            - name: USUAL_CONFIG_NAME
              value: "/Open-IM-Server"
          resources:
            limits:
              cpu: 600m
              memory: 1024Mi
            requests:
              cpu: 10m
              memory: 100Mi
      volumes:
        - name: config
          configMap:
            name: openim
            items:
              - key: config.yaml
                path: config.yaml
        - name: notification
          configMap:
            name: openim
            items:
              - key: notification.yaml
                path: notification.yaml
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - user
              topologyKey: kubernetes.io/hostname
            weight: 100
---
# Source: openim/templates/job-kafka.yaml
kind: Job
apiVersion: batch/v1
metadata:
  name: kafka-topic-openim
  labels:
    helm.sh/chart: openim-3.0.0-alpha1
    app.kubernetes.io/name: openim
    app.kubernetes.io/instance: openim
    app.kubernetes.io/version: "errcode"
    app.kubernetes.io/managed-by: Helm
    app: kafka-topic
spec:
  ttlSecondsAfterFinished: 10
  template:
    spec:
      containers:
        - name: kafka-topic-creator
          image: docker.io/bitnami/kafka:3.4.1-debian-11-r0
          env:
            - name: KAFKA_BOOTSTRAP_SERVER
              value: bitnami-kafka-0.bitnami-kafka-headless.kafka.svc.cluster.local:9092
          command:
            - /bin/bash
            - -c
            - |
              topics=("ws2ms_chat" "msg_to_mongo" "ms2ps_chat" "msg_to_modify")
              for topic in "${topics[@]}"
              do
                  echo "create topic $topic"
                  /opt/bitnami/kafka/bin/kafka-topics.sh --create --if-not-exists --bootstrap-server $KAFKA_BOOTSTRAP_SERVER --replication-factor 1 --partitions 12 --topic $topic
              done
      restartPolicy: Never
  backoffLimit: 4
